#!/usr/bin/perl
# 
# userdb config for query-remote.pl
# 
# This is a perl file.
# 


{
        'section' => 'userdb',
        'prefork' => 0,
        'hosts_command' => 'doit -Olw userdb*pc/ROLE=userdb*tm',
        'remote_script' => <<MYCOMMAND,
echo "---START NETSTAT---"
netstat -n --inet
echo "---END NETSTAT---"
echo "---START HTTPDS---"
pidof httpd
echo "---END HTTPDS---"
echo -n "MEMORY: "
free -m | grep Mem:
echo -n "OLD_IDLE: "
cat /proc/stat | grep 'cpu ' | awk '{print \\\$5}'
sleep 1
echo -n "NEW_IDLE: "
cat /proc/stat | grep 'cpu ' | awk '{print \\\$5}'
echo -n "CPUS: "
cat /proc/cpuinfo | grep processor | wc -l
MYCOMMAND
        'variables' =>
            {
            'orahost' => "oradb453.be.tm.cbsig.net"
            },
        'handler' =>
            sub {
                my $o = shift;
                my $host = shift;
                my %vars = %{$o->{'variables'}};
                my %results = map { chomp $_; $_ } %{$o->{'results'}};
                for ( qw(MEMORY OLD_IDLE NEW_IDLE CPUS HTTPDS) ) {
                    die "$o->{section}: Missing Result: $_" unless exists $results{$_};
                }

                my @mem = split(/\s+/, $results{MEMORY});
                my $idle = int ( ($results{NEW_IDLE}-$results{OLD_IDLE}) / $results{CPUS} );
                my @httpdpids = split(/\s+/, $results{HTTPDS});
                my $httpdcount = @httpdpids;

                print "$host:  Mem $mem[3]m | Idle $idle | HTTPDs $httpdcount\n";
            }
}

__END__

    #doit -Olw userdb*tm*pc/ROLE=userdb '
    ORAHOST=`dig +short oradb453.be.tm.cbsig.net` ;
    TCPESTAB=`netstat -n --inet | grep -e "^tcp.*ESTABLISHED" | wc -l` ;
    TIME=`date '+%H:%M:%S'` ;
    HTTPDS=`ps -ef | grep httpd | wc -l`
    NETST=`netstat -n --inet`
    TCPESTAB=`echo "$NETST | 
'

